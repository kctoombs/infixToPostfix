// token.cpp - implements class Token

// DO NOT EDIT THIS FILE - you will not turn it in.

#include "token.h"

#include <string>
#include <sstream>
using namespace std;

Token::Token(string s) : s(s) {

    // assume not a number for now
    num = false;

    // now try to parse s as a double value
    istringstream parser(s);
    parser >> v;
    if ( !parser.fail() )
        num = true;

    // or try to match with a valid operator string
    else if (s == "+") o = add;
    else if (s == "-") o = subtract;
    else if (s == "*") o = multiply;
    else if (s == "/") o = divide;
    else if (s == "^") o = power;
    else if (s == "(") o = leftParen;
    else if (s == ")") o = rightParen;

    // signal invalid token if fall through to here
    else
        throw string("bad token (") + s + string(")");
}

bool Token::isNumber() const {
    return num;
}

double Token::value() const {
    if (isNumber())
        return v;

    throw string("not number");
}

OpType Token::op() const {
    if (!isNumber())
        return o;

    throw string("not operator");
}

// implement "friend" output function
ostream& operator<< (ostream &out, const Token &token) {
    return (out << token.s);
}

